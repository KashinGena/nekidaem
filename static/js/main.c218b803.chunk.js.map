{"version":3,"sources":["redux/actions/auth.js","pages/Authorization/Registration.jsx","assets/img/trello.png","components/Header/Header.jsx","components/Task/Task.jsx","components/AddTask/AddTask.jsx","components/Column/Column.jsx","redux/actions/cards.js","pages/Board/Board.jsx","pages/Authorization/Login.jsx","App.js","reportWebVitals.js","redux/reducers/auth.js","redux/reducers/card.js","redux/store.js","index.js"],"names":["logout","localStorage","clear","type","autoAuthSuccess","token","userName","auth","authObj","isLogin","url","requestObj","username","password","dispatch","a","axios","post","response","status","data","expirationData","Date","getTime","setItem","JSON","stringify","refreshToken","error","time","getState","authReducer","config","headers","Authorization","console","log","setTimeout","then","removeItem","payload","tokenRefreshed","Registration","props","history","React","useState","name","setName","email","setEmail","setPassword","tryToAuth","setTryToAuth","useSelector","state","useDispatch","className","action","placeholder","value","onChange","event","target","required","onClick","e","preventDefault","to","Header","isAuth","onLogout","alt","src","logo","Task","id","index","text","onDelete","card","cardsReducer","cards","draggableId","toString","provided","draggableProps","dragHandleProps","ref","innerRef","AddTask","onCancelClick","onAddClick","setValue","Column","color","title","tasks","count","onAddClickl","onDeleteTask","isAddMode","setAddMode","useCallback","row","style","backgroundColor","droppableId","droppableProps","length","map","bind","areEqual","prevProps","nextProps","memo","cardCreated","getCardsSuccess","cardDeleted","Board","columns","columnHeader","onAddClickHandler","alert","createCard","onDeleteClickHandler","delete","deleteCards","onDragEnd","result","destination","source","updateCardSuccess","reqObj","patch","update","useEffect","get","getCards","task","Login","App","getItem","autoAuth","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","res","arr","filter","item","object","reduce","obj","Object","assign","column","seq_num","cardsClone","columnFrom","splice","col","columnTo","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.c218b803.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const logout = () => {\r\n    localStorage.clear()\r\n    return {\r\n        type:'LOGOUT'\r\n    }\r\n}\r\n\r\nexport const authSuccess = (token, username) => {\r\n    return {\r\n        type:'AUTH_SUCCESS',\r\n        token,\r\n        username\r\n    }\r\n}\r\n\r\nexport const autoAuthSuccess = (token, userName) => {\r\n    return {\r\n        type:'AUTO_AUTH_SUCCESS',\r\n        token,\r\n        userName\r\n    }\r\n}\r\n\r\nexport const authFailed = (error) => {\r\n\r\n    return {\r\n        type:'AUTH_ERROR',\r\n        error\r\n    }\r\n}\r\n\r\nexport const tokenRefreshed = (token) => {\r\n    localStorage.removeItem('expData')\r\n    localStorage.removeItem('token')\r\n    const expirationData = new Date().getTime()*60*60*100\r\n    localStorage.setItem('expData', JSON.stringify(expirationData))\r\n    localStorage.setItem('token',token)\r\n    return {\r\n        type:'TOKEN_REFRESHED',\r\n        payload:token\r\n    }\r\n}\r\n\r\nexport const auth = (authObj,isLogin) => {\r\n    const url = (isLogin)?\r\n        'https://trello.backend.tests.nekidaem.ru/api/v1/users/login/'\r\n        :\r\n        'https://trello.backend.tests.nekidaem.ru/api/v1/users/create/'\r\n\r\n    const requestObj = (isLogin)? {...authObj.username,...authObj.password}:authObj\r\n\r\n    return async (dispatch) => { \r\n        try {\r\n            const response = await axios.post(url,requestObj)\r\n            if (response.status===201) {\r\n  \r\n                const data = response.data\r\n                const expirationData = new Date().getTime()*60*60*100\r\n                localStorage.setItem('expData', JSON.stringify(expirationData))\r\n                localStorage.setItem('token', authObj.token)\r\n                localStorage.setItem('username', authObj.username)\r\n                localStorage.setItem('password', authObj.password)\r\n                dispatch(authSuccess(data.token,data.username))\r\n                dispatch(refreshToken(3600))\r\n              \r\n            } \r\n            else {\r\n                dispatch(logout())   \r\n            } \r\n        }\r\n        catch (e) {\r\n           dispatch(authFailed(e.response.data))\r\n    }\r\n}\r\n}\r\n\r\n\r\nexport const autoAuth = () => {\r\n    const url = 'https://trello.backend.tests.nekidaem.ru/api/v1/users/login/'\r\n\r\n    const userName= localStorage.getItem('username')\r\n    const password = localStorage.getItem('password')\r\n    const requestObj = (userName && password) && {'username':userName,'password':password}\r\n    return async (dispatch) => { \r\n        try {\r\n            const response =(requestObj)? await axios.post(url,requestObj):null\r\n            if (response.status===200) {\r\n               \r\n                const data = response.data\r\n                const userName=localStorage.getItem('username')\r\n                dispatch(autoAuthSuccess(data,userName))\r\n              \r\n            } \r\n            else {\r\n                dispatch(logout())   \r\n            } \r\n        }\r\n        catch (e) {\r\n            dispatch(logout())   \r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function refreshToken(time) {\r\n    return  (dispatch,getState) => {\r\n        const token = getState().authReducer.token\r\n        const config = {\r\n            headers: { Authorization: `JWT ${token}` }\r\n        }\r\n        console.log(config);\r\n        \r\n        \r\n        setTimeout(() => {\r\n           axios.post('https://trello.backend.tests.nekidaem.ru/api/v1/users/refresh_token/',token,config)\r\n           .then(data => dispatch(tokenRefreshed(data)))\r\n        },time*1000)\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport './Authorization.scss'\r\nimport {useDispatch} from 'react-redux'\r\nimport {auth} from '../../redux/actions/auth'\r\nimport { NavLink} from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\n\r\n\r\n\r\nconst Registration = (props) => {\r\n    console.log(props.history);\r\n    \r\n    \r\n    const [name,setName] = React.useState('')\r\n    const [email,setEmail] = React.useState('')\r\n    const [password,setPassword] = React.useState('')\r\n    const [tryToAuth,setTryToAuth]= React.useState(false)\r\n    const error = useSelector( state => state.authReducer.error)\r\n    \r\n    const dispatch = useDispatch()\r\n    \r\n    \r\n    const onLoginHandler = (e) => {\r\n        e.preventDefault();\r\n        const payload = {\r\n            'username': name,\r\n            'email':email,\r\n            'password': password\r\n        } \r\n        dispatch(auth(payload,false)) \r\n        setTryToAuth(true) \r\n    }\r\n\r\n    return (\r\n     \r\n        <div className=\"auth\">\r\n            <h1 className=\"auth__title\">Регистрация</h1>\r\n            <form action=\"\" className=\"auth__form\">\r\n                <input\r\n                    className ='auth__input'\r\n                    type ='text' placeholder='name (required)'\r\n                    value = {name}\r\n                    onChange = {(event) => { \r\n                                setName(event.target.value)\r\n                                setTryToAuth(false)\r\n                              }}\r\n                    required\r\n                />\r\n                {error && error.username && tryToAuth && \r\n                    <div className=\"auth__error\">{error.username[0]}</div>\r\n                }\r\n                <input\r\n                    className='auth__input'\r\n                    type='text' placeholder='email'\r\n                    value={email}\r\n                    onChange = {(event) => { \r\n                        setEmail(event.target.value)\r\n                        setTryToAuth(false)\r\n                      }}\r\n                />\r\n                {error && error.email  && tryToAuth && \r\n                    <div className=\"auth__error\">{error.email[0]}</div>\r\n                }\r\n                <input\r\n                    className='auth__input'\r\n                    type='text' placeholder='password (required)'\r\n                    value={password}\r\n                    onChange = {(event) => { \r\n                        setPassword(event.target.value)\r\n                        setTryToAuth(false)\r\n                      }}\r\n                    required\r\n                />\r\n                {error && error.password  && tryToAuth && \r\n                    <div className=\"auth__error\">{error.password[0]}</div>\r\n                }\r\n                \r\n                <button className=\"auth__login-btn\"\r\n                        onClick={onLoginHandler}\r\n                >\r\n                    Регистрация\r\n                </button>\r\n            </form>\r\n            <div className=\"auth__reminder\">Уже есть аккаунт? <NavLink to='/login'>Войти</NavLink></div>\r\n        </div>\r\n    \r\n    )\r\n}\r\n\r\nexport default Registration","export default __webpack_public_path__ + \"static/media/trello.0d980286.png\";","import React from 'react'\r\nimport logo from '../../assets/img/trello.png'\r\nimport './Header.scss'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\nconst Header = ({isAuth,userName,onLogout}) => {\r\n\r\n    return (\r\n        <header className='header'>\r\n            <NavLink to='/'>\r\n                <div className=\"header__logo\">\r\n                    <img className=\"header__logo-img\" alt ='logo' src ={logo}/>\r\n                    <h1 className=\"header__logo-title\">FakeTrello</h1>\r\n                </div>\r\n            </NavLink>\r\n            \r\n            {isAuth &&\r\n                <div className='header__login-container'>\r\n                    <span className=\"header__login-user\">{userName}</span>\r\n                    <button className='header__login-auth'\r\n                            onClick={onLogout}\r\n                    >\r\n                        Выйти\r\n                    </button>\r\n                </div>\r\n            }\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport './Task.scss'\r\nimport { Draggable } from 'react-beautiful-dnd'\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst Task = ({id, text,index, onDelete,...props}) => {\r\n  const card = useSelector( state => state.cardsReducer.cards[id])\r\n    \r\n    return (\r\n        <Draggable draggableId={id.toString()} index={index}>\r\n            {(provided)=>(\r\n                <div \r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                     ref={provided.innerRef}\r\n                    className=\"task\">\r\n                        <div className=\"task__header\">\r\n                            <button onClick={onDelete} className='task__btn-delete'>Х</button>\r\n                        </div>\r\n                        <p className=\"task__title\"><span>id</span>  {id}</p>\r\n                        <div className=\"task__text\">{card.text}</div>\r\n              </div>\r\n            )}\r\n      \r\n        </Draggable>\r\n    )\r\n}\r\n\r\nexport default Task","import React from 'react'\r\nimport './AddTask.scss'\r\n\r\n\r\nconst AddTask = ({onCancelClick, onAddClick}) => {\r\n    const [value, setValue] =React.useState('')\r\n    const onClick = () => {\r\n        onAddClick(value)\r\n    }\r\n    return (\r\n        <div className='add-task'>\r\n            <textarea className='add-task__text'\r\n                      placeholder=\"Ввести заголовок для этой карточки\"\r\n                      value={value}\r\n                      onChange={(e)=>setValue(e.target.value)}></textarea>\r\n            <div className=\"add-task__btn-container\">\r\n                <button className='add-task__add-btn'\r\n                        onClick={onClick}\r\n                >\r\n                    Добавить карточку\r\n                </button>\r\n                <button className='add-task__cancel-btn'\r\n                        onClick={onCancelClick}\r\n                >\r\n                    x\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddTask","import React from 'react'\r\nimport './Column.scss'\r\nimport Task from '../Task/Task'\r\nimport AddTask from '../AddTask/AddTask';\r\nimport { Droppable } from 'react-beautiful-dnd';\r\n\r\n\r\n\r\n\r\nconst Column = ({id,color, title, tasks,count, onAddClickl,onDeleteTask}) => {\r\n    const [isAddMode,setAddMode]=React.useState(false)\r\n    \r\n    const onAddClick = React.useCallback((text) => {\r\n        const card = {\r\n            row:id.toString(),\r\n            text:text\r\n        }\r\n        onAddClickl(card)\r\n        setAddMode(false)\r\n    },[onAddClickl,id])\r\n\r\n    return (\r\n        <div className=\"column\">\r\n            <div className='column__header' style={{backgroundColor:color}}>\r\n               {title} ({count})  \r\n            </div>\r\n            <div className=\"column__inner\">\r\n                <Droppable droppableId={id.toString()}>\r\n                    {(provided) => (\r\n                        <div className=\"column__task-lists\"\r\n                            ref={provided.innerRef}\r\n                            {...provided.droppableProps}\r\n                        >\r\n                            {tasks.length!==0 && tasks.map((id,index) => {\r\n                            return  <Task key={id}\r\n                                          index={index}\r\n                                          id={id} \r\n                                          onDelete={onDeleteTask.bind(null,id)}\r\n                                    />\r\n                            })}\r\n                            {provided.placeholder}\r\n                        </div>\r\n                    )}\r\n                </Droppable>\r\n            </div>\r\n            {isAddMode && <AddTask onCancelClick={() => setAddMode(false)}\r\n                                 onAddClick={onAddClick}\r\n                        />}\r\n            <div className=\"column__add\">\r\n               {!isAddMode && <button onClick={() => setAddMode(true)}\r\n                        className=\"column__add-btn\"\r\n                >\r\n                    Добавить карточку\r\n                </button>\r\n                }\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nfunction areEqual(prevProps, nextProps) {\r\n    return (prevProps.id===nextProps.id &&\r\n        prevProps.color===nextProps.color &&\r\n        prevProps.title === nextProps.title &&\r\n        prevProps.count === nextProps.count &&\r\n        prevProps.tasks.toString() === nextProps.tasks.toString()\r\n        )\r\n}\r\n\r\nexport default React.memo(Column,areEqual)","import axios from \"axios\"\r\n\r\nexport const getCards = (token) => {\r\n    const config = {\r\n        headers: { Authorization: `JWT ${token.token}` }\r\n    };  \r\n    return async dispatch => {\r\n        try {\r\n            const response = await axios.get('https://trello.backend.tests.nekidaem.ru/api/v1/cards/',config)\r\n            const data= response.data\r\n            dispatch(getCardsSuccess(data))\r\n        }\r\n        catch(e) {\r\n            alert(e)\r\n        }\r\n    }      \r\n}\r\n\r\nexport const createCard = (card, token) => {\r\n    const config = {\r\n        headers: { Authorization: `JWT ${token.token}` }\r\n    };\r\n\r\n    \r\n    return async dispatch => {\r\n        try {\r\n            const response = await axios.post('https://trello.backend.tests.nekidaem.ru/api/v1/cards/',card,config)\r\n            const data= response.data\r\n            dispatch(cardCreated(data))         \r\n        }\r\n        catch(e) {\r\n            alert(e)\r\n        }\r\n    }\r\n}\r\n\r\nconst cardCreated = (card) => {\r\n\r\n    \r\n    return {\r\n        type:'CARD_CREATED',\r\n        payload:card\r\n    }\r\n}\r\nexport const update  = (id,destination,token) => {\r\n    const config = {\r\n        headers: { Authorization: `JWT ${token.token}` }\r\n    };\r\n\r\n    return  (dispatch,getState) => {\r\n        \r\n         const card =getState().cardsReducer.cards[id]\r\n      \r\n        \r\n        const reqObj = {\r\n           'row':destination.droppableId,\r\n           'seq_num':destination.index,\r\n           'text':card.text\r\n        }\r\n        \r\n        try {\r\n               \r\n             axios.patch(`https://trello.backend.tests.nekidaem.ru/api/v1/cards/${id}/`,reqObj,config)\r\n            \r\n        }\r\n        catch(e) {\r\n            console.log(e);\r\n            \r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n export const updateCardSuccess = (id,source,destination) => {\r\n \r\n     \r\n    return {\r\n        type:'UPDATE_CARD',\r\n        id,\r\n        source,\r\n        destination\r\n    }\r\n}\r\n\r\nconst getCardsSuccess = (cards) => {\r\n    return {\r\n        type:'GET_CARDS_SUCCESS',\r\n        payload:cards\r\n    }\r\n}\r\n\r\nconst cardDeleted = (id) => {\r\n    return {\r\n        type:'DELETE_CARD',\r\n        payload:id\r\n    }\r\n}\r\n\r\n\r\nexport const deleteCards = (id,token) => {\r\n    const config = {\r\n        headers: { Authorization: `JWT ${token.token}` }\r\n    };  \r\n    return async dispatch => {\r\n        try {\r\n             await axios.delete(`https://trello.backend.tests.nekidaem.ru/api/v1/cards/${id}/`,config)\r\n             dispatch(cardDeleted(id))\r\n        }\r\n        catch(e) {\r\n\r\n        }\r\n    }      \r\n}","import React, { useCallback } from 'react'\r\nimport './Board.scss'\r\nimport Column from '../../components/Column/Column'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {createCard, getCards, deleteCards, update, updateCardSuccess} from '../../redux/actions/cards'\r\nimport { DragDropContext } from 'react-beautiful-dnd'\r\n\r\n\r\n\r\nconst Board = () => {\r\n\r\n  const dispatch = useDispatch()\r\n  const token = useSelector(state => state.authReducer.token)\r\n\r\n  \r\n  \r\n  const columns = useSelector(state => state.cardsReducer.columns)\r\n  const columnHeader = useSelector(state => state.cardsReducer.columnHeader)\r\n \r\n\r\n  const onAddClickHandler = useCallback((card) => {\r\n      dispatch(createCard(card,token))  \r\n  },[])\r\n    \r\n  const onDeleteClickHandler = (id) => {\r\n      dispatch(deleteCards(id,token))  \r\n  }\r\n\r\n  const onDragEnd = React.useCallback((result) => {\r\n    const {destination, source,draggableId} = result\r\n    if (!destination) return;\r\n    if (destination.droppableId=== source.droppableId &&\r\n      destination.index===source.index)  return;\r\n      dispatch(updateCardSuccess(draggableId,source,destination)) \r\n      dispatch(update(draggableId,destination,token))\r\n  },[token,dispatch])\r\n\r\n  React.useEffect(()=>{\r\n    if (token)\r\n      dispatch(getCards(token))\r\n  },[token])\r\n\r\n  return (\r\n    <DragDropContext onDragEnd={onDragEnd}>\r\n\r\n          <div className=\"board\">\r\n            {columns.length!==0 && columns.map((id, index)=> {\r\n              return (\r\n                <Column key={columnHeader[id].title}\r\n                        id={id}\r\n                        count={columnHeader[id].task.length}\r\n                        title={columnHeader[id].title}\r\n                        color={columnHeader[id].color}\r\n                        tasks={columnHeader[id].task}\r\n                        onAddClickl={onAddClickHandler}\r\n                        onDeleteTask={onDeleteClickHandler}\r\n                        />\r\n              )\r\n            })}\r\n          </div>\r\n        \r\n\r\n    </DragDropContext>\r\n  );\r\n}\r\n\r\nexport default React.memo(Board);\r\n","import React from 'react'\r\nimport './Authorization.scss'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport {auth} from '../../redux/actions/auth'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\n\r\nconst Login = () => {\r\n    const [name,setName] = React.useState('')\r\n    const [password,setPassword] = React.useState('')\r\n    const [tryToAuth,setTryToAuth]= React.useState(false)\r\n    const error = useSelector( state => state.authReducer.error)\r\n    const dispatch = useDispatch()\r\n    \r\n\r\n    const onLoginHandler = (e) => {\r\n        e.preventDefault();\r\n        const payload = {\r\n            'username': name,\r\n            'password': password\r\n        } \r\n        dispatch(auth(payload,true))\r\n        setTryToAuth(true)\r\n    }\r\n\r\n    return (\r\n        <div className=\"auth\">\r\n            <h1 className=\"auth__title\">Авторизация</h1>\r\n            <form action=\"\" className=\"auth__form\">\r\n                <input\r\n                    className='auth__input'\r\n                    type='text' placeholder='name (required)'\r\n                    value={name}\r\n                    onChange= {(event) =>{\r\n                        setName(event.target.value)\r\n                        setTryToAuth(false)\r\n                    }}\r\n                    required\r\n                />\r\n                {error && error.username && tryToAuth && \r\n                    <div className=\"auth__error\">{error.username[0]}</div>\r\n                }\r\n                <input\r\n                    className='auth__input'\r\n                    type='text' placeholder='password (required)'\r\n                    value={password}\r\n                    onChange= {(event) => {\r\n                        setPassword(event.target.value)\r\n                        setTryToAuth(false)\r\n                    }}\r\n                    required\r\n                />\r\n                {error && error.password  && tryToAuth && \r\n                    <div className=\"auth__error\">{error.password[0]}</div>\r\n                }\r\n                \r\n                <button className=\"auth__login-btn\"\r\n                        onClick={onLoginHandler}\r\n                >\r\n                    Войти\r\n                </button>\r\n            </form>\r\n            <div className=\"auth__reminder\">Нет аккаунта? <NavLink to='/register'>Зарегистрируйтесь</NavLink></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","import React from 'react'\nimport './styles/App.scss';\nimport Registration from './pages/Authorization/Registration';\nimport Header from './components/Header/Header';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport Board from './pages/Board/Board';\nimport {useSelector, useDispatch} from 'react-redux'\nimport Login from './pages/Authorization/Login';\nimport { autoAuth,logout } from './redux/actions/auth';\n\n\n \nfunction App() {\n  const isAuth = useSelector ( state => state.authReducer.isAuth)\n  const userName = useSelector(state => state.authReducer.userName)\n\n  const dispatch = useDispatch()\n  \nReact.useEffect(() => {\n  if (!isAuth)\n    dispatch(autoAuth())\n},[])\n\nconst onLogoutHandler = () => {\n  dispatch(logout())\n}\n\n  return (\n    <div className=\"app\">\n      <div className='container'>\n        <Header isAuth={isAuth} userName={userName} onLogout={onLogoutHandler}/>\n        <Switch>\n          <Route exact path = \"/\">\n            {isAuth? <Board/> : null}\n          </Route> \n          {!isAuth && <Route exact path ='/login' render = {() =><Login/>}/>}\n          {!isAuth && <Route exact path ='/register' render = {() =><Registration/>}/>}\n              \n   \n      \n          <Redirect to ='/register'/>\n        </Switch>\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState =  {\r\n    isAuth:false,\r\n    token:null,\r\n    userName:'',\r\n    error:null,\r\n    expirationData:null\r\n}\r\n\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case 'AUTH_SUCCESS':\r\n\r\n            return {\r\n                ...state,\r\n                token:action.token,\r\n                userName:action.username,\r\n                isAuth:true,\r\n                error:null,\r\n                \r\n\r\n            }\r\n\r\n        case 'AUTH_ERROR': \r\n            return {\r\n                ...state, error:action.error\r\n            }\r\n        case 'LOGOUT':\r\n            return {\r\n                ...state,\r\n                isAuth: false,\r\n                token:'',\r\n                userName:'',\r\n                error:null\r\n            }\r\n        case 'AUTO_AUTH_SUCCESS':\r\n            return {\r\n                ...state,\r\n                isAuth:true,\r\n                token:action.token,\r\n                userName:action.userName,\r\n                error:null\r\n               \r\n            }\r\n        case('TOKEN_REFRESHED'): {\r\n            return {\r\n                ...state,\r\n                token:action.payload\r\n            }\r\n        }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport default authReducer","const initialState = {\r\n    cards:{},\r\n    columns:['0','1','2','3'],\r\n    columnHeader:{\r\n       '0': {title:'ON_HOLD',id:0,color:'#fb7e46',task:[]},\r\n       '1': {title:'IN-PROGRESS',id:1,color:'#2a92bf',task:[]},\r\n       '2': {title:'NEEDS-REVIEW',id:2,color:'#f4ce46',task:[]},\r\n       '3': {title:'APPROVED',id:3,color:'#00b961',task:[]}\r\n    }\r\n}\r\n\r\n\r\nconst cardsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case('GET_CARDS_SUCCESS'): {\r\n                const res = [...action.payload];\r\n                const arr = [...state.columns]\r\n                const columnHeader={...state.columnHeader}\r\n                arr.map((id,index) => \r\n                    columnHeader[id].task=[...columnHeader[id].task,...res.filter(item => +item.row===index).map(item => item.id)]\r\n                )\r\n            const object = res.reduce(\r\n                    (obj, item) => Object.assign(obj, { [item.id]: item}), {});\r\n            return {\r\n                ...state,\r\n                cards:object,\r\n                columnHeader:columnHeader\r\n            }\r\n        }\r\n\r\n        case ('DELETE_CARD'): {\r\n            const id = action.payload\r\n            const cards = {...state.cards}\r\n            const row = cards[id].row\r\n            delete cards[id]\r\n            const column = {...state.columnHeader[row]}\r\n            const task =column.task.filter(item =>item!==id)\r\n            task.map((item,index)=>cards[item].seq_num=index)\r\n\r\n            return {\r\n                ...state,\r\n                cards:cards,\r\n                columnHeader: {\r\n                    ...state.columnHeader,\r\n                    [row]:{\r\n                        ...state.columnHeader[row],\r\n                        task\r\n                    }\r\n                }\r\n            \r\n        }\r\n    }\r\n        case ('CARD_CREATED'): {\r\n            const item = action.payload          \r\n            const {id, row} = item\r\n            const columns= {...state.columnHeader}\r\n            columns[row].task=[...columns[row].task,item.id] \r\n\r\n                return {\r\n                    ...state,\r\n                    cards: {...state.cards,[id]:item},\r\n                    columnHeader: columns\r\n                }\r\n        }\r\n        \r\n\r\n        case ('UPDATE_CARD'): {\r\n            const id=action.id\r\n            const destination = action.destination \r\n            const source = action.source   \r\n            const cardsClone={...state.cards}                   \r\n            const item = cardsClone[id]\r\n            //если в одном столбце\r\n             if (destination.droppableId===source.droppableId) { \r\n                const columnFrom = {...state.columnHeader[source.droppableId]}  \r\n                const task = [...columnFrom.task]\r\n                const [col]=task.splice(source.index,1)\r\n                task.splice(destination.index,0,col)\r\n                columnFrom.task=task\r\n                return {\r\n                    ...state,\r\n                    cards:cardsClone,\r\n                    columnHeader: {\r\n                        ...state.columnHeader,\r\n                        [item.row]:columnFrom\r\n                    }\r\n                }\r\n                \r\n            }\r\n            const columnFrom = {...state.columnHeader[source.droppableId]}\r\n          \r\n            \r\n            const [col]=columnFrom.task.splice(source.index,1)    \r\n            const columnTo = {...state.columnHeader[destination.droppableId]}  \r\n            columnTo.task.splice(destination.index,0,col)\r\n            item.row=destination.droppableId           \r\n                    return {\r\n                        ...state,\r\n                        cards:cardsClone,\r\n                        columnHeader: {\r\n                            ...state.columnHeader,\r\n                            [item.row]:columnFrom,\r\n                            [destination.droppableId]:columnTo\r\n                        }\r\n                    }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default cardsReducer","import {createStore, combineReducers, applyMiddleware, compose} from 'redux'\r\nimport authReducer from './reducers/auth'\r\nimport cardsReducer from './reducers/card'\r\nimport thunk from 'redux-thunk';\r\n\r\nconst rootReducer = combineReducers({\r\n    authReducer,\r\n    cardsReducer\r\n})\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?   \r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n      // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\r\n    }) : compose;\r\nconst store = createStore(rootReducer,composeEnhancers(applyMiddleware(thunk)))\r\n\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\nimport { HashRouter as Router } from 'react-router-dom';//HashRouter for GH Pages\n\n\nimport store from './redux/store'\n\nReactDOM.render(\n  <Router>\n     <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>\n \n   \n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}