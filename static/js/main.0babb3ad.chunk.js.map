{"version":3,"sources":["redux/actions/auth.js","pages/Authorization/Registration.jsx","assets/img/trello.png","components/Header/Header.jsx","components/Task/Task.jsx","components/AddTask/AddTask.jsx","components/Column/Column.jsx","redux/actions/cards.js","pages/Board/Board.jsx","pages/Authorization/Login.jsx","App.js","reportWebVitals.js","redux/reducers/auth.js","redux/reducers/card.js","redux/store.js","index.js"],"names":["logout","localStorage","clear","type","authSuccess","token","username","autoAuthSuccess","userName","auth","authObj","isLogin","url","password","requestObj","console","log","dispatch","a","axios","post","response","status","data","expirationData","Date","getTime","setItem","JSON","stringify","refreshToken","error","time","getState","authReducer","config","headers","Authorization","setTimeout","then","removeItem","payload","tokenRefreshed","Registration","props","history","React","useState","name","setName","email","setEmail","setPassword","tryToAuth","setTryToAuth","useSelector","state","isAuth","useDispatch","to","className","action","placeholder","value","onChange","event","target","required","onClick","e","preventDefault","Header","onLogout","alt","src","logo","Task","id","index","text","onDelete","card","cardsReducer","cards","draggableId","toString","provided","draggableProps","dragHandleProps","ref","innerRef","AddTask","onCancelClick","onAddClick","setValue","Column","color","title","tasks","count","onAddClickl","onDeleteTask","isAddMode","setAddMode","useCallback","row","style","backgroundColor","droppableId","droppableProps","length","map","bind","areEqual","prevProps","nextProps","memo","cardCreated","getCardsSuccess","cardDeleted","Board","columns","columnHeader","onAddClickHandler","alert","createCard","onDeleteClickHandler","delete","deleteCards","onDragEnd","result","destination","source","updateCardSuccess","reqObj","patch","update","useEffect","expData","parse","getItem","get","task","Login","App","autoAuth","exact","path","component","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","res","arr","filter","item","object","reduce","obj","Object","assign","column","seq_num","cardsClone","columnFrom","splice","col","columnTo","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0babb3ad.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const logout = () => {\r\n    localStorage.clear()\r\n    return {\r\n        type:'LOGOUT'\r\n    }\r\n}\r\n\r\nexport const authSuccess = (token, username) => {\r\n    return {\r\n        type:'AUTH_SUCCESS',\r\n        token,\r\n        username\r\n    }\r\n}\r\n\r\nexport const autoAuthSuccess = (token, userName) => {\r\n    return {\r\n        type:'AUTO_AUTH_SUCCESS',\r\n        token,\r\n        userName\r\n    }\r\n}\r\n\r\nexport const authFailed = (error) => {\r\n\r\n    return {\r\n        type:'AUTH_ERROR',\r\n        error\r\n    }\r\n}\r\n\r\nexport const tokenRefreshed = (token) => {\r\n    localStorage.removeItem('expData')\r\n    localStorage.removeItem('token')\r\n    const expirationData = new Date().getTime()*60*60*100\r\n    localStorage.setItem('expData', JSON.stringify(expirationData))\r\n    localStorage.setItem('token',token)\r\n    return {\r\n        type:'TOKEN_REFRESHED',\r\n        payload:token\r\n    }\r\n}\r\n\r\nexport const auth = (authObj,isLogin) => {\r\n    const url = (isLogin)?\r\n        'https://trello.backend.tests.nekidaem.ru/api/v1/users/login/'\r\n        :\r\n        'https://trello.backend.tests.nekidaem.ru/api/v1/users/create/'\r\n    const {username,password}=authObj\r\n    const requestObj = (isLogin)? {username,password}:authObj\r\n    console.log(requestObj);\r\n    \r\n    return async (dispatch) => { \r\n        try {\r\n            const response = await axios.post(url,requestObj)\r\n            console.log(response);\r\n            \r\n            if (response.status===201 || response.status===200) {\r\n  \r\n                const data = response.data\r\n                console.log(data);\r\n                \r\n                const expirationData = new Date().getTime()*60*60*100\r\n                localStorage.setItem('expData', JSON.stringify(expirationData))\r\n                console.log(data.token);\r\n                \r\n                localStorage.setItem('token', data.token)\r\n                localStorage.setItem('username', data.username)\r\n                localStorage.setItem('password', data.password)\r\n                dispatch(authSuccess(data.token,data.username))\r\n                dispatch(refreshToken(3600))\r\n              \r\n            } \r\n            else {\r\n                dispatch(logout())   \r\n            } \r\n        }\r\n        catch (e) {\r\n           dispatch(authFailed(e.response.data))\r\n    }\r\n}\r\n}\r\n\r\n\r\nexport const autoAuth = () => {\r\n    const url = 'https://trello.backend.tests.nekidaem.ru/api/v1/users/login/'\r\n\r\n    const userName= localStorage.getItem('username')\r\n    const password = localStorage.getItem('password')\r\n    const token = localStorage.getItem('token')\r\n    const expData = new Date(JSON.parse(localStorage.getItem('expData')))\r\n   \r\n    const requestObj = (userName && password) && {'username':userName,'password':password}\r\n    return async (dispatch) => { \r\n        if (expData>new Date().getTime())\r\n            dispatch(autoAuthSuccess(token,userName))\r\n        try {\r\n            const response =(requestObj)? await axios.post(url,requestObj):null\r\n            if (response.status===200) {\r\n               \r\n                const data = response.data\r\n                const userName=localStorage.getItem('username')\r\n                dispatch(autoAuthSuccess(data.token,userName))\r\n            } \r\n            else {\r\n                dispatch(logout())   \r\n            } \r\n        }\r\n        catch (e) {\r\n            dispatch(logout())   \r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function refreshToken(time) {\r\n    return  (dispatch,getState) => {\r\n        const token = getState().authReducer.token\r\n        const config = {\r\n            headers: { Authorization: `JWT ${token}` }\r\n        }\r\n        console.log(config);\r\n        \r\n        \r\n        setTimeout(() => {\r\n           axios.post('https://trello.backend.tests.nekidaem.ru/api/v1/users/refresh_token/',token,config)\r\n           .then(data => dispatch(tokenRefreshed(data)))\r\n        },time*1000)\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport './Authorization.scss'\r\nimport {useDispatch} from 'react-redux'\r\nimport {auth} from '../../redux/actions/auth'\r\nimport { NavLink, Redirect } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\n\r\n\r\n\r\nconst Registration = (props) => {\r\n   const {history} =props\r\n    \r\n    \r\n    const [name,setName] = React.useState('')\r\n    const [email,setEmail] = React.useState('')\r\n    const [password,setPassword] = React.useState('')\r\n    const [tryToAuth,setTryToAuth]= React.useState(false)\r\n    const error = useSelector( state => state.authReducer.error)\r\n    const isAuth = useSelector( state => state.authReducer.isAuth)\r\n    const dispatch = useDispatch()\r\n    console.log(props);\r\n    \r\n    \r\n    const onLoginHandler = (e) => {\r\n        e.preventDefault();\r\n        const payload = {\r\n            'username': name,\r\n            'email':email,\r\n            'password': password\r\n        } \r\n       \r\n        dispatch(auth(payload,false)) \r\n        setTryToAuth(true) \r\n        \r\n        \r\n       \r\n    }\r\n    if (isAuth) return (<Redirect to='/board'/>)\r\n    return (\r\n     \r\n        <div className=\"auth\">\r\n            <h1 className=\"auth__title\">Регистрация</h1>\r\n            <form action=\"\" className=\"auth__form\">\r\n                <input\r\n                    className ='auth__input'\r\n                    type ='text' placeholder='name (required)'\r\n                    value = {name}\r\n                    onChange = {(event) => { \r\n                                setName(event.target.value)\r\n                                setTryToAuth(false)\r\n                              }}\r\n                    required\r\n                />\r\n                {error && error.username && tryToAuth && \r\n                    <div className=\"auth__error\">{error.username[0]}</div>\r\n                }\r\n                <input\r\n                    className='auth__input'\r\n                    type='text' placeholder='email'\r\n                    value={email}\r\n                    onChange = {(event) => { \r\n                        setEmail(event.target.value)\r\n                        setTryToAuth(false)\r\n                      }}\r\n                />\r\n                {error && error.email  && tryToAuth && \r\n                    <div className=\"auth__error\">{error.email[0]}</div>\r\n                }\r\n                <input\r\n                    className='auth__input'\r\n                    type='text' placeholder='password (required)'\r\n                    value={password}\r\n                    onChange = {(event) => { \r\n                        setPassword(event.target.value)\r\n                        setTryToAuth(false)\r\n                      }}\r\n                    required\r\n                />\r\n                {error && error.password  && tryToAuth && \r\n                    <div className=\"auth__error\">{error.password[0]}</div>\r\n                }\r\n                \r\n                <button className=\"auth__login-btn\"\r\n                        onClick={onLoginHandler}\r\n                >\r\n                    Регистрация\r\n                </button>\r\n            </form>\r\n            <div className=\"auth__reminder\">Уже есть аккаунт? <NavLink to='/login'>Войти</NavLink></div>\r\n        </div>\r\n    \r\n    )\r\n}\r\n\r\nexport default Registration","export default __webpack_public_path__ + \"static/media/trello.0d980286.png\";","import React from 'react'\r\nimport logo from '../../assets/img/trello.png'\r\nimport './Header.scss'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\nconst Header = ({isAuth,userName,onLogout}) => {\r\n\r\n    return (\r\n        <header className='header'>\r\n            <NavLink to='/'>\r\n                <div className=\"header__logo\">\r\n                    <img className=\"header__logo-img\" alt ='logo' src ={logo}/>\r\n                    <h1 className=\"header__logo-title\">FakeTrello</h1>\r\n                </div>\r\n            </NavLink>\r\n            \r\n            {isAuth ?\r\n                <div className='header__login-container'>\r\n                    <span className=\"header__login-user\">{userName}</span>\r\n                    <button className='header__login-auth'\r\n                            onClick={onLogout}\r\n                    >\r\n                        Выйти\r\n                    </button>\r\n                </div>\r\n                :\r\n                <div className='header__login-container'>\r\n                    <NavLink to='/register'>\r\n                        <button className='header__login-auth'\r\n                                onClick={onLogout}\r\n                        >\r\n                            Авторизация\r\n                        </button>\r\n                    </NavLink>\r\n                </div>\r\n            }\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport './Task.scss'\r\nimport { Draggable } from 'react-beautiful-dnd'\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst Task = ({id, text,index, onDelete,...props}) => {\r\n  const card = useSelector( state => state.cardsReducer.cards[id])\r\n    \r\n    return (\r\n        <Draggable draggableId={id.toString()} index={index}>\r\n            {(provided)=>(\r\n                <div \r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                     ref={provided.innerRef}\r\n                    className=\"task\">\r\n                        <div className=\"task__header\">\r\n                            <button onClick={onDelete} className='task__btn-delete'>Х</button>\r\n                        </div>\r\n                        <p className=\"task__title\"><span>id</span>  {id}</p>\r\n                        <div className=\"task__text\">{card.text}</div>\r\n              </div>\r\n            )}\r\n      \r\n        </Draggable>\r\n    )\r\n}\r\n\r\nexport default Task","import React from 'react'\r\nimport './AddTask.scss'\r\n\r\n\r\nconst AddTask = ({onCancelClick, onAddClick}) => {\r\n    const [value, setValue] =React.useState('')\r\n    const onClick = () => {\r\n        onAddClick(value)\r\n    }\r\n    return (\r\n        <div className='add-task'>\r\n            <textarea className='add-task__text'\r\n                      placeholder=\"Ввести заголовок для этой карточки\"\r\n                      value={value}\r\n                      onChange={(e)=>setValue(e.target.value)}></textarea>\r\n            <div className=\"add-task__btn-container\">\r\n                <button className='add-task__add-btn'\r\n                        onClick={onClick}\r\n                >\r\n                    Добавить карточку\r\n                </button>\r\n                <button className='add-task__cancel-btn'\r\n                        onClick={onCancelClick}\r\n                >\r\n                    x\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddTask","import React from 'react'\r\nimport './Column.scss'\r\nimport Task from '../Task/Task'\r\nimport AddTask from '../AddTask/AddTask';\r\nimport { Droppable } from 'react-beautiful-dnd';\r\n\r\n\r\n\r\n\r\nconst Column = ({id,color, title, tasks,count, onAddClickl,onDeleteTask}) => {\r\n    const [isAddMode,setAddMode]=React.useState(false)\r\n    \r\n    const onAddClick = React.useCallback((text) => {\r\n        const card = {\r\n            row:id.toString(),\r\n            text:text\r\n        }\r\n        onAddClickl(card)\r\n        setAddMode(false)\r\n    },[onAddClickl,id])\r\n\r\n    return (\r\n        <div className=\"column\">\r\n            <div className='column__header' style={{backgroundColor:color}}>\r\n               {title} ({count})  \r\n            </div>\r\n            <div className=\"column__inner\">\r\n                <Droppable droppableId={id.toString()}>\r\n                    {(provided) => (\r\n                        <div className=\"column__task-lists\"\r\n                            ref={provided.innerRef}\r\n                            {...provided.droppableProps}\r\n                        >\r\n                            {tasks.length!==0 && tasks.map((id,index) => {\r\n                            return  <Task key={id}\r\n                                          index={index}\r\n                                          id={id} \r\n                                          onDelete={onDeleteTask.bind(null,id)}\r\n                                    />\r\n                            })}\r\n                            {provided.placeholder}\r\n                        </div>\r\n                    )}\r\n                </Droppable>\r\n            </div>\r\n            {isAddMode && <AddTask onCancelClick={() => setAddMode(false)}\r\n                                 onAddClick={onAddClick}\r\n                        />}\r\n            <div className=\"column__add\">\r\n               {!isAddMode && <button onClick={() => setAddMode(true)}\r\n                        className=\"column__add-btn\"\r\n                >\r\n                    Добавить карточку\r\n                </button>\r\n                }\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nfunction areEqual(prevProps, nextProps) {\r\n    return (prevProps.id===nextProps.id &&\r\n        prevProps.color===nextProps.color &&\r\n        prevProps.title === nextProps.title &&\r\n        prevProps.count === nextProps.count &&\r\n        prevProps.tasks.toString() === nextProps.tasks.toString()\r\n        )\r\n}\r\n\r\nexport default React.memo(Column,areEqual)","import axios from \"axios\"\r\n\r\nexport const getCards = () => {\r\n\r\n    return async (dispatch,getState) => {\r\n        const token = getState().authReducer.token\r\n        const expData = new Date(JSON.parse(localStorage.getItem('expData')))\r\n        const config = {\r\n            headers: { Authorization: `JWT ${token}` }\r\n        };\r\n        if (expData>new Date().getTime())\r\n            dispatch(getCardsSuccess())\r\n        try {\r\n            console.log(config);\r\n            \r\n            const response = await axios.get('https://trello.backend.tests.nekidaem.ru/api/v1/cards/',config)\r\n            const data= response.data\r\n            console.log(data);\r\n            \r\n            dispatch(getCardsSuccess(data))\r\n        }\r\n        catch(e) {\r\n            alert(e)\r\n        }\r\n    }      \r\n}\r\n\r\nexport const createCard = (card) => {\r\n\r\n    return async (dispatch,getState) => {\r\n        const token = getState().authReducer.token\r\n        const config = {\r\n            headers: { Authorization: `JWT ${token}` }\r\n        };\r\n        try {\r\n            const response = await axios.post('https://trello.backend.tests.nekidaem.ru/api/v1/cards/',card,config)\r\n            const data= response.data\r\n            dispatch(cardCreated(data))         \r\n        }\r\n        catch(e) {\r\n            alert(e)\r\n        }\r\n    }\r\n}\r\n\r\nconst cardCreated = (card) => {\r\n\r\n    \r\n    return {\r\n        type:'CARD_CREATED',\r\n        payload:card\r\n    }\r\n}\r\n\r\n\r\nexport const update  = (id,destination) => {\r\n\r\n    return  (dispatch,getState) => {\r\n        const token = getState().authReducer.token\r\n        console.log(token);\r\n        \r\n        const config = {\r\n            headers: { Authorization: `JWT ${token}` }\r\n        };\r\n         const card =getState().cardsReducer.cards[id]\r\n      \r\n        \r\n        const reqObj = {\r\n           'row':destination.droppableId,\r\n           'seq_num':destination.index,\r\n           'text':card.text\r\n        }\r\n        \r\n        try {\r\n               \r\n             axios.patch(`https://trello.backend.tests.nekidaem.ru/api/v1/cards/${id}/`,reqObj,config)\r\n            \r\n        }\r\n        catch(e) {\r\n            console.log(e);\r\n            \r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n export const updateCardSuccess = (id,source,destination) => {\r\n \r\n    return {\r\n        type:'UPDATE_CARD',\r\n        id,\r\n        source,\r\n        destination\r\n    }\r\n}\r\n\r\nconst getCardsSuccess = (cards) => {\r\n    return {\r\n        type:'GET_CARDS_SUCCESS',\r\n        payload:cards\r\n    }\r\n}\r\n\r\nconst cardDeleted = (id) => {\r\n    return {\r\n        type:'DELETE_CARD',\r\n        payload:id\r\n    }\r\n}\r\n\r\n\r\nexport const deleteCards = (id) => {\r\n  \r\n    return async (dispatch,getState) => {\r\n        const token = getState().authReducer.token\r\n        console.log(token);\r\n        \r\n        const config = {\r\n            headers: { Authorization: `JWT ${token}` }\r\n        };\r\n        try {\r\n             await axios.delete(`https://trello.backend.tests.nekidaem.ru/api/v1/cards/${id}/`,config)\r\n             dispatch(cardDeleted(id))\r\n        }\r\n        catch(e) {\r\n\r\n        }\r\n    }      \r\n}","import React, { useCallback } from 'react'\r\nimport './Board.scss'\r\nimport Column from '../../components/Column/Column'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {createCard, getCards, deleteCards, update, updateCardSuccess} from '../../redux/actions/cards'\r\nimport { DragDropContext } from 'react-beautiful-dnd'\r\n\r\n\r\n\r\nconst Board = () => {\r\n\r\n  const dispatch = useDispatch()\r\n  const token = useSelector(state => state.authReducer.token)\r\n\r\n  \r\n  \r\n  const columns = useSelector(state => state.cardsReducer.columns)\r\n  const columnHeader = useSelector(state => state.cardsReducer.columnHeader)\r\n \r\n\r\n  const onAddClickHandler = useCallback((card) => {\r\n      dispatch(createCard(card,token))  \r\n  },[])\r\n    \r\n  const onDeleteClickHandler = (id) => {\r\n      dispatch(deleteCards(id,token))  \r\n  }\r\n\r\n  const onDragEnd = React.useCallback((result) => {\r\n    const {destination, source,draggableId} = result\r\n    if (!destination) return;\r\n    if (destination.droppableId=== source.droppableId &&\r\n      destination.index===source.index)  return;\r\n      dispatch(updateCardSuccess(draggableId,source,destination)) \r\n      dispatch(update(draggableId,destination,token))\r\n  },[token,dispatch])\r\n\r\n  React.useEffect(()=>{\r\n    if (token)\r\n      dispatch(getCards())\r\n  },[token])\r\n\r\n  return (\r\n    <DragDropContext onDragEnd={onDragEnd}>\r\n\r\n          <div className=\"board\">\r\n            {columns.length!==0 && columns.map((id, index)=> {\r\n              console.log(columnHeader[id]);\r\n              return (\r\n                \r\n                \r\n                <Column key={columnHeader[id].title}\r\n                        id={id}\r\n                        count={columnHeader[id].task.length}\r\n                        title={columnHeader[id].title}\r\n                        color={columnHeader[id].color}\r\n                        tasks={columnHeader[id].task}\r\n                        onAddClickl={onAddClickHandler}\r\n                        onDeleteTask={onDeleteClickHandler}\r\n                        />\r\n              )\r\n            })}\r\n          </div>\r\n        \r\n\r\n    </DragDropContext>\r\n  );\r\n}\r\n\r\nexport default React.memo(Board);\r\n","import React from 'react'\r\nimport './Authorization.scss'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport {auth} from '../../redux/actions/auth'\r\nimport { NavLink, Redirect } from 'react-router-dom'\r\n\r\n\r\n\r\nconst Login = ({history,...rest}) => {\r\n    const [name,setName] = React.useState('')\r\n    const [password,setPassword] = React.useState('')\r\n    const [tryToAuth,setTryToAuth]= React.useState(false)\r\n    const error = useSelector( state => state.authReducer.error)\r\n    const isAuth = useSelector( state => state.authReducer.isAuth)\r\n\r\n    const dispatch = useDispatch()\r\n    \r\n\r\n    const onLoginHandler = (e) => {\r\n        e.preventDefault();\r\n        const payload = {\r\n            'username': name,\r\n            'password': password\r\n        } \r\n        dispatch(auth(payload,true))\r\n        setTryToAuth(true)\r\n      \r\n    }\r\n    if (isAuth) return (<Redirect to='/board'/>)\r\n    return (\r\n        <div className=\"auth\">\r\n            <h1 className=\"auth__title\">Авторизация</h1>\r\n            <form action=\"\" className=\"auth__form\">\r\n                <input\r\n                    className='auth__input'\r\n                    type='text' placeholder='name (required)'\r\n                    value={name}\r\n                    onChange= {(event) =>{\r\n                        setName(event.target.value)\r\n                        setTryToAuth(false)\r\n                    }}\r\n                    required\r\n                />\r\n                {error && error.username && tryToAuth && \r\n                    <div className=\"auth__error\">{error.username[0]}</div>\r\n                }\r\n                <input\r\n                    className='auth__input'\r\n                    type='text' placeholder='password (required)'\r\n                    value={password}\r\n                    onChange= {(event) => {\r\n                        setPassword(event.target.value)\r\n                        setTryToAuth(false)\r\n                    }}\r\n                    required\r\n                />\r\n                {error && error.password  && tryToAuth && \r\n                    <div className=\"auth__error\">{error.password[0]}</div>\r\n                }\r\n                \r\n                <button className=\"auth__login-btn\"\r\n                        onClick={onLoginHandler}\r\n                >\r\n                    Войти\r\n                </button>\r\n            </form>\r\n            <div className=\"auth__reminder\">Нет аккаунта? <NavLink to='/register'>Зарегистрируйтесь</NavLink></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","import React from 'react'\r\nimport './styles/App.scss';\r\nimport Registration from './pages/Authorization/Registration';\r\nimport Header from './components/Header/Header';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport Board from './pages/Board/Board';\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport Login from './pages/Authorization/Login';\r\nimport { autoAuthSuccess,logout, autoAuth } from './redux/actions/auth';\r\n\r\n\r\n \r\nfunction App() {\r\n  const isAuth = useSelector ( state => state.authReducer.isAuth)\r\n  const userName = useSelector(state => state.authReducer.userName)\r\n\r\n  const dispatch = useDispatch()\r\n  \r\nReact.useEffect(() => {\r\n  console.log(localStorage);\r\n  \r\n  const token = localStorage.getItem('token')\r\n  const username = localStorage.getItem('username')\r\n  console.log(token);\r\n  \r\n  if (token)\r\n    dispatch(autoAuthSuccess(token,username))\r\n    else\r\n    dispatch(autoAuth())\r\n},[])\r\n\r\nconst onLogoutHandler = () => {\r\n  dispatch(logout())\r\n}\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className='container'>\r\n        <Header isAuth={isAuth} userName={userName} onLogout={onLogoutHandler}/>     \r\n          <Switch>\r\n            <Route exact path ='/'>\r\n              {isAuth? <Redirect to='/board'/> : <Redirect to='/register'/>}\r\n            </Route>\r\n            <Route exact path ='/login'  component =  {Login}/>\r\n            <Route exact path ='/register' component = {Registration}/>\r\n            {isAuth && <Route exact path ='/board' render = {() =><Board/>}/>}\r\n          </Switch>   \r\n      </div>\r\n    </div>\r\n\r\n  )\r\n  }\r\n\r\n  \r\n\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const initialState =  {\r\n    isAuth:false,\r\n    token:null,\r\n    userName:'',\r\n    error:null,\r\n    expirationData:null\r\n}\r\n\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case 'AUTH_SUCCESS':\r\n\r\n            return {\r\n                ...state,\r\n                token:action.token,\r\n                userName:action.username,\r\n                isAuth:true,\r\n                error:null,\r\n                \r\n\r\n            }\r\n\r\n        case 'AUTH_ERROR': \r\n            return {\r\n                ...state, error:action.error\r\n            }\r\n        case 'LOGOUT':\r\n            return {\r\n                ...state,\r\n                isAuth: false,\r\n                token:null,\r\n                userName:'',\r\n                error:null\r\n            }\r\n        case 'AUTO_AUTH_SUCCESS':\r\n            return {\r\n                ...state,\r\n                isAuth:true,\r\n                token:action.token,\r\n                userName:action.userName,\r\n                error:null\r\n               \r\n            }\r\n        case('TOKEN_REFRESHED'): {\r\n            return {\r\n                ...state,\r\n                token:action.payload\r\n            }\r\n        }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport default authReducer","const initialState = {\r\n    cards:{},\r\n    columns:['0','1','2','3'],\r\n    columnHeader:{\r\n       '0': {title:'ON_HOLD',id:0,color:'#fb7e46',task:[]},\r\n       '1': {title:'IN-PROGRESS',id:1,color:'#2a92bf',task:[]},\r\n       '2': {title:'NEEDS-REVIEW',id:2,color:'#f4ce46',task:[]},\r\n       '3': {title:'APPROVED',id:3,color:'#00b961',task:[]}\r\n    }\r\n}\r\n\r\n\r\nconst cardsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case('GET_CARDS_SUCCESS'): {\r\n            if(!action.payload) {\r\n                return {\r\n                    ...state\r\n                }\r\n            }\r\n                const res = [...action.payload];\r\n                console.log(res);\r\n                \r\n                const arr = [...state.columns]\r\n                const columnHeader={...state.columnHeader}\r\n                console.log(columnHeader);\r\n                console.log(state.cards);\r\n                \r\n                \r\n                arr.map((id,index) => \r\n                    columnHeader[id].task=[...res.filter(item => +item.row===index).map(item => item.id)]\r\n                )\r\n            const object = res.reduce(\r\n                    (obj, item) => Object.assign(obj, { [item.id]: item}), {});\r\n                    console.log(object);\r\n                    console.log(columnHeader);\r\n                    \r\n                    \r\n            return {\r\n                ...state,\r\n                cards:object,\r\n                columnHeader:columnHeader\r\n            }\r\n        }\r\n\r\n        case ('DELETE_CARD'): {\r\n            const id = action.payload\r\n            const cards = {...state.cards}\r\n            const row = cards[id].row\r\n            delete cards[id]\r\n            const column = {...state.columnHeader[row]}\r\n            const task =column.task.filter(item =>item!==id)\r\n            task.map((item,index)=>cards[item].seq_num=index)\r\n\r\n            return {\r\n                ...state,\r\n                cards:cards,\r\n                columnHeader: {\r\n                    ...state.columnHeader,\r\n                    [row]:{\r\n                        ...state.columnHeader[row],\r\n                        task\r\n                    }\r\n                }\r\n            \r\n        }\r\n    }\r\n        case ('CARD_CREATED'): {\r\n            const item = action.payload          \r\n            const {id, row} = item\r\n            const columns= {...state.columnHeader}\r\n            columns[row].task=[...columns[row].task,item.id] \r\n\r\n                return {\r\n                    ...state,\r\n                    cards: {...state.cards,[id]:item},\r\n                    columnHeader: columns\r\n                }\r\n        }\r\n        \r\n\r\n        case ('UPDATE_CARD'): {\r\n            const id=action.id\r\n            const destination = action.destination \r\n            const source = action.source   \r\n            const cardsClone={...state.cards}                   \r\n            const item = cardsClone[id]\r\n            //если в одном столбце\r\n             if (destination.droppableId===source.droppableId) { \r\n                const columnFrom = {...state.columnHeader[source.droppableId]}  \r\n                const task = [...columnFrom.task]\r\n                const [col]=task.splice(source.index,1)\r\n                task.splice(destination.index,0,col)\r\n                columnFrom.task=task\r\n                return {\r\n                    ...state,\r\n                    cards:cardsClone,\r\n                    columnHeader: {\r\n                        ...state.columnHeader,\r\n                        [item.row]:columnFrom\r\n                    }\r\n                }\r\n                \r\n            }\r\n            const columnFrom = {...state.columnHeader[source.droppableId]}\r\n          \r\n            \r\n            const [col]=columnFrom.task.splice(source.index,1)    \r\n            const columnTo = {...state.columnHeader[destination.droppableId]}  \r\n            columnTo.task.splice(destination.index,0,col)\r\n            item.row=destination.droppableId           \r\n                    return {\r\n                        ...state,\r\n                        cards:cardsClone,\r\n                        columnHeader: {\r\n                            ...state.columnHeader,\r\n                            [item.row]:columnFrom,\r\n                            [destination.droppableId]:columnTo\r\n                        }\r\n                    }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default cardsReducer","import {createStore, combineReducers, applyMiddleware, compose} from 'redux'\r\nimport authReducer from './reducers/auth'\r\nimport cardsReducer from './reducers/card'\r\nimport thunk from 'redux-thunk';\r\n\r\nconst rootReducer = combineReducers({\r\n    authReducer,\r\n    cardsReducer\r\n})\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?   \r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n      // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\r\n    }) : compose;\r\nconst store = createStore(rootReducer,composeEnhancers(applyMiddleware(thunk)))\r\n\r\n\r\nexport default store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux'\r\nimport { HashRouter as Router } from 'react-router-dom';//HashRouter for GH Pages\r\n\r\n\r\nimport store from './redux/store'\r\n\r\nReactDOM.render(\r\n  <Router>\r\n     <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </Router>\r\n \r\n   \r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}